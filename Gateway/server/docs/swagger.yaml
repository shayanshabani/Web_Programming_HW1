definitions:
  proto.GetUsersRequest:
    properties:
      authKey:
        type: integer
      messageId:
        type: integer
      userId:
        type: integer
    type: object
  proto.GetUsersResponse:
    properties:
      messageId:
        type: integer
      users:
        items:
          $ref: '#/definitions/proto.User'
        type: array
    type: object
  proto.GetUsersWithInjectionRequest:
    properties:
      authKey:
        type: integer
      messageId:
        type: integer
      userId:
        type: string
    type: object
  proto.ReqDh_Request:
    properties:
      A:
        description: public key generated by client
        type: integer
      message_id:
        description: a random even integer, greater than of that in req_pq
        type: integer
      nonce:
        description: random string generated by client in req_pq
        type: string
      server_nonce:
        description: random string generated by server in req_pq
        type: string
    type: object
  proto.ReqDh_Response:
    properties:
      B:
        description: public key generated by server
        type: integer
      message_id:
        description: random odd integer
        type: integer
      nonce:
        description: the same string that client sent
        type: string
      server_nonce:
        description: another random string of size 20
        type: string
    type: object
  proto.ReqPq_Request:
    properties:
      message_id:
        type: integer
      nonce:
        description: random string sent by client with size 20
        type: string
    type: object
  proto.ReqPq_Response:
    properties:
      g:
        description: a generating number like 5
        type: integer
      message_id:
        type: integer
      nonce:
        description: the same string that client sent with size 20
        type: string
      p:
        description: a prime number like 23
        type: integer
      server_nonce:
        description: another random string with size 20, that server sends to client
        type: string
    type: object
  proto.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      family:
        type: string
      id:
        type: string
      name:
        type: string
      sex:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/req_dh:
    post:
      consumes:
      - application/json
      description: Get Dq from server
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proto.ReqDh_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.ReqDh_Response'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: GetDh
      tags:
      - Auth
  /auth/req_pq:
    post:
      consumes:
      - application/json
      description: Get Pq from server
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proto.ReqPq_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.ReqPq_Response'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: GetPq
      tags:
      - Auth
  /get-user:
    post:
      consumes:
      - application/json
      description: Get User from server
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proto.GetUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.GetUsersResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: GetUser
      tags:
      - Biz
  /get-user-inject:
    post:
      consumes:
      - application/json
      description: Get User With Injection from server
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proto.GetUsersWithInjectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.GetUsersResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: GetUserWithInjection
      tags:
      - Biz
swagger: "2.0"
