syntax = "proto3";

package proto;

option go_package="web_hw1/proto";

service Auth_Service {
    rpc req_pq (req_pq_Request) returns (req_pq_Response) {}
    rpc req_DH_params (req_dh_Request) returns (req_dh_Response) {}
    rpc Authenticate (Seek) returns (Confirm) {}
}

message req_pq_Request {
    string nonce = 1; // random string sent by client with size 20
    int32 message_id = 2;
}

message req_pq_Response {
    string nonce = 1; // the same string that client sent with size 20
    string server_nonce = 2; // another random string with size 20, that server sends to client
    int32 message_id = 3;
    int32 p = 4; // a prime number like 23
    int32 g = 5; // a generating number like 5
}

message req_dh_Request {
    string nonce = 1; // random string generated by client in req_pq
    string server_nonce = 2; // random string generated by server in req_pq
    int32 message_id = 3; // a random even integer, greater than of that in req_pq
    int32 A = 4; // public key generated by client
}

message req_dh_Response {
    string nonce = 1; // the same string that client sent
    string server_nonce = 2; // another random string of size 20
    int32 message_id = 3; // random odd integer
    int32 B = 4; // public key generated by server
}

message Seek {
    int32 auth_key = 1; // the key that the user suppose to have
}

message Confirm {
    bool valid = 1; // if the auth key is valid or not
}