
server {
    listen 80 default_server;
    server_name localhost;
    return 301 https://$host$request_uri;
}



server {

    listen  443 ssl;

    server_name  localhost;

  
    
    ssl_certificate /etc/nginx/conf.d/localhost.crt;
    ssl_certificate_key /etc/nginx/conf.d/localhost.key;
    
    
    gzip on; #FOR COMPRESION
    gzip_vary on; #CACHE both versions
    gzip_min_length 10240; #not compress lower than it
    gzip_proxied expired no-cache no-store private auth; # copress even for proxy users
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml; #type for compress
    gzip_disable "MSIE [1-6]\.";   #dont use for internet explorer 
    
    #access_log /var/log/nginx/access.log main buffer=16k;
    #access_log  /var/log/nginx/access.log main buffer=16k;
    access_log off;
      
    
    
    #Controlling Buffer Overflow Attacks
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 4k;
    
    
    client_body_timeout 12;   #max wait for body
    client_header_timeout 12;#max wait for header
    keepalive_timeout 15; #max wait for a client
    send_timeout 10;#max wait for responce
    
#    worker_processes auto; not allowd

## Only allow these request methods ##
     if ($request_method !~ ^(GET|HEAD|POST)$ ) {
         return 444;
     }
## Do not accept DELETE, SEARCH and other methods ##



# Stop deep linking or hot linking
location /images/ {
  valid_referers none blocked localhost;
   if ($invalid_referer) {
     return   403;
   }
}
    
    
    ## Block some robots ##
     if ($http_user_agent ~* msnbot|scrapbot) {
            return 403;
     }
     
     add_header X-Frame-Options SAMEORIGIN;#avoid clickjacking
     
     
     

 #   location / {
        #root   /usr/share/nginx/html;
       # index  index.html index.htm;
  #  }
    

    
    location / {
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 #   proxy_set_header X-Forwarded-Proto $scheme;
  #  proxy_set_header Host $http_host;
    proxy_redirect off;
   # proxy_set_header        X-Real-IPr       $realip_remote_addr;
    real_ip_header    X-Forwarded-For;
    #real_ip_header2    X-Real-IP;
    proxy_pass http://localhost:6433;
    }


    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

